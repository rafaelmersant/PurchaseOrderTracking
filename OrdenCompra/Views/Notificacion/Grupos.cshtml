@model IEnumerable<OrdenCompra.Models.NotificationGroup>

@{
    ViewBag.Title = "Grupos de usuarios a notificar";
}

<link href="~/Content/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/Content/toastr.css" rel="stylesheet" type="text/css" />

<div class="container-fluid">
    <section class="text-dark border-custom border">

        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Grupos de usuarios a notificar
                <span class="btn-group pull-right">
                    <a href="@Url.Action("Index")" class="btn btn-danger btn-sm update-articles" style="margin-top: -7px">Regresar a las Notificaciones</a>
                </span>
            </h6>
        </div>

        <div id="updateGroup" class="form-group bg-light-gray pt-3 pb-3 col-12" style="display:none">
            <input type="hidden" id="groupId" name="groupId" value="" />
            <h6 class="bg-dark text-light p-2">Modificando el grupo correspondiente a: <span id="groupType"><strong></strong></span></h6>
            <div class="row">
                <div class="col-3 mb-1">
                    <label for="validationDefault01">Correo</label>
                    <input type="text" id="emailToAdd" name="emailToAdd" value="" class="form-control form-control-sm" autocomplete="off" />
                </div>
                <div class="col-1">
                    <button class="btn btn-sm btn-danger addNewEmail" style="margin-top: 22px">Agregar</button>
                </div>
            </div>
            <div class="row mt-3">
                <div id="emails">
                </div>
            </div>

            <button id="finishUpdate" class="btn btn-sm btn-danger mt-3">Finalizar actualización</button>
        </div>

        <div id="tableSection" class="mt-3 ml-2 mr-2">
            <table id="groupTable" class="table table-striped table-bordered table-condensed table-sm mt-4">
                <thead>
                    <tr>
                        <th>
                            Tipo
                        </th>
                        <th>
                            Correos
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Type</td>
                            <td>
                                <ul>
                                    @{var emails = item.SendTo.Split(';');
                                        foreach (var email in emails)
                                        {
                                            <li>@email</li>
                                        }
                                    }
                                </ul>
                            </td>

                            <td align="center">

                                <a class="btn btn-sm btn-success" href="javascript:void(0);" onclick="showGroupDetail(@item.Id, '@item.Type', '@item.SendTo');" title="Editar">
                                    <i class="fa fa-check"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </section>
</div>

@section scripts {
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.js"></script>

}
<script type="text/javascript">
    var sendToEmails;

    $(document).ready(function () {
        $("#Notifications").addClass("menu-active");
        $("#groupTable").DataTable();

        //Replace Previous -> Anterior
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Previous', 'Anterior');
        });

        //Replace Next -> Próximo
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Next', 'Próximo');
        });

        //Replace Showing -> Mostrando
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Showing', 'Mostrando');
        });

        //Replace Show -> Mostrar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Show', 'Mostrar');
        });

        //Replace Entries -> Registros
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('entries', 'registros');
        });

        //Replace Search -> Buscar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Search', 'Buscar');
        });

        $(".addNewEmail").on('click', function (evt) {
            evt.preventDefault();
            evt.stopPropagation();

            const emailToAdd = $("#emailToAdd").val();
            if (!emailToAdd) {
                toastr.error('Debe agregar un correo valido.');
                return false;
            }

            addNewEmail(emailToAdd);
        });

        $("#finishUpdate").on('click', function (evt) {
            evt.preventDefault();
            evt.stopPropagation();

            window.location.reload(true);
        });
    });

    function showGroupDetail(id, type, sendTo) {
        $("#updateGroup").fadeIn();
        $("#tableSection").hide();

        $("#groupId").val(id)
        $("#groupType").html(type);

        const emails = sendTo.split(';');
        sendToEmails = emails;

        renderEmails(emails);
    }

    function addNewEmail(newEmail) {
        const isValidEmail = (email) => /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(email);

        if (!isValidEmail(newEmail)) {
            toastr.error(`El correo ${newEmail} no es válido.`);
            return false;
        }

        if (sendToEmails.includes(newEmail)) {
            toastr.error(`El correo ${newEmail} ya esta en el listado.`);
            return false;
        }

        sendToEmails.push(newEmail);
        renderEmails(sendToEmails);

        const groupId = $("#groupId").val();

        $.ajax({
            "url": `/Notificacion/AddEmail?groupId=${groupId}&email=${newEmail}`,
            "type": "POST",
            "success": async function (response) {
                if (response.result === "200") {
                    console.log(response);
                    toastr.success(`Correo $${newEmail} agregado con exito.`);
                }
                else {
                    console.log(response.message);
                    toastr.error(response.message);
                }
            }
        });
    }

    function renderEmails(allEmails) {
        let emails = $("#emails");

        let emailsToRender = `<ul>`;

        for (const item of allEmails) {
            emailsToRender += `
                    <li>
                        <span>${item}</span>
                        <a href="javascript:void(0)" data-id="${item}" class="fa fa-trash text-danger h5 removeEmail"></a>
                    </li>`
        }

        emailsToRender += `</ul>`;

        emails.html(emailsToRender);

        $(".removeEmail").on('click', function (evt) {
            const emailToRemove = $(this).attr("data-id");
            const index = sendToEmails.indexOf(emailToRemove);
            const groupId = $("#groupId").val();

            if (confirm(`Esta seguro que desea eliminar el correo ${emailToRemove}?`)) {

                console.log('items before remove:', sendToEmails)
                console.log('index to remove:', index)
                console.log('item to remove:', emailToRemove);

                sendToEmails.splice(index, 1);
                console.log('items after remove:', sendToEmails)
                //sendToEmails = sendToEmails.slice(0, index).concat(sendToEmails.slice(index + 1));

                renderEmails(sendToEmails);

                $.ajax({
                    "url": `/Notificacion/RemoveEmail?groupId=${groupId}&email=${emailToRemove}`,
                    "type": "POST",
                    "success": async function (response) {
                        if (response.result === "200") {
                            console.log(response);
                            toastr.success(`Correo $${emailToRemove} eliminado con exito.`);
                        }
                        else {
                            console.log(response.message);
                            toastr.error(response.message);
                        }
                    }
                });
            }
        });
    }

</script>
